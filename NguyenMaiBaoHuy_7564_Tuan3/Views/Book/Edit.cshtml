@model NguyenMaiBaoHuy_7564_Tuan3.Models.Sach

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Sach</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.masach)

        <div class="form-group">
            @Html.LabelFor(model => model.maloai, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.maloai, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.maloai, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.tensach, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.tensach, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.tensach, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.hinh, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <img class="pt-2 pb-2 img-cover" src="@Html.DisplayFor(model => model.hinh)" alt="thumbnail" />
                <!-- Button trigger modal -->
                <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#staticBackdrop">
                    Choose Image
                </button>

                <!-- Modal -->
                <div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
                    <div class="modal-dialog modal-lg modal-dialog-scrollable">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="staticBackdropLabel">Image List</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                <div class="row">
                                    @foreach (var item in ViewBag.ListImageBook)
                                    {
                                        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12 pb-3 ">
                                            <div class="choose-image card w-100 h-100" style="cursor:pointer">
                                                <div class="card-body text-center">
                                                    <img src="@item.Value" alt="thumnails" class="w-75 h-75" />
                                                </div>
                                                <div class="card-footer text-center">
                                                    <p class="name-image">@item.Text</p>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" id="accept" class="btn btn-primary">Accept</button>
                                <button type="button" class="btn btn-danger" id="canel-choose">Cancel</button>
                            </div>
                        </div>
                    </div>
                </div>

                @Html.EditorFor(model => model.hinh, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.hinh, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script>
    const chooseImage = document.querySelectorAll('.choose-image');
    const cancel = document.getElementById('canel-choose');
    const accept = document.getElementById('accept');
    const modal = document.getElementById('staticBackdrop'); // Khởi tạo modal

    chooseImage.forEach((item) => {
        item.addEventListener('click', () => {
            const confirmation = confirm("Bạn có chắc chắn muốn chọn mục này?");
            if (confirmation) {
                item.classList.add('border', 'border-primary');
            }
        });
    });

    cancel.addEventListener('click', () => {
        const confirmation = confirm("Bạn có chắc chắn muốn huỷ?");
        if (confirmation) {
            chooseImage.forEach((item) => {
                item.classList.remove('border', 'border-primary');
            });
        }
    });


    document.addEventListener("DOMContentLoaded", () => {
        accept.addEventListener('click', () => {

            chooseImage.forEach((item) => {
                if (item.classList.contains('border', 'border-primary')) {
                    const img = item.querySelector('img'); // Lấy thẻ img trong mục đã chọn
                    if (img) {
                        let src = img.getAttribute('src'); // Lấy giá trị của thuộc tính src
                        // Loại bỏ dấu gạch chéo "//" ở đầu nếu có
                        src = src.replace(/^\/\//, '');
                        $(".img-cover").attr("src", src);

                        $("input[name='hinh']").val(src);
                    }
                }
            })
            modal.hide();
        });

    })

</script>